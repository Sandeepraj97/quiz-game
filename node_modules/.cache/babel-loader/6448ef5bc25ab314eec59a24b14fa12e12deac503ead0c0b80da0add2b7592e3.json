{"ast":null,"code":"var _jsxFileName = \"E:\\\\New folder\\\\SANDY\\\\Ass\\\\CODSOFT\\\\quizgame\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport questionData from \"./questions.json\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [timer, setTimer] = useState(100);\n  const handleAnswerClick = selectedOption => {\n    if (selectedOption === questionData.correctOption) {\n      setScore(prevScore => prevScore + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"qiz-app\",\n      children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"You Score 3/3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Restart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Question \", currentQuestion + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: questionData[currentQuestion].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options\",\n          children: questionData[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAnswerClick(option),\n            children: option\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer\",\n          children: [\"Time Left \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"seconds\",\n            children: [timer, \" s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 54\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"HGoifB6gIHwy1u1kJkQMdy4fGKk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["questionData","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","currentQuestion","setCurrentQuestion","score","setScore","showScore","setShowScore","timer","setTimer","handleAnswerClick","selectedOption","correctOption","prevScore","children","className","fileName","_jsxFileName","lineNumber","columnNumber","question","options","map","option","index","onClick","_c","$RefreshReg$"],"sources":["E:/New folder/SANDY/Ass/CODSOFT/quizgame/src/App.js"],"sourcesContent":["\r\nimport questionData from \"./questions.json\"\r\n\r\nimport \"./App.css\"\r\nimport { useState } from \"react\"\r\n\r\nconst  App = () =>{\r\n    const [currentQuestion, setCurrentQuestion] = useState(0)\r\n    const [score,setScore] = useState(0)\r\n    const [showScore,setShowScore] = useState(false)\r\n    const [timer,setTimer] = useState(100)\r\n\r\n\r\n    const handleAnswerClick = (selectedOption) =>{\r\n        if(selectedOption === questionData.correctOption){\r\n            setScore((prevScore) => prevScore + 1)\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"qiz-app\">\r\n            {\r\n                showScore ? (\r\n                    <div className=\"score-section\" >\r\n                        <h2>You Score 3/3</h2>\r\n                        <button>Restart</button>\r\n                    </div>\r\n                ): \r\n                (\r\n                <div className=\"question-section\">\r\n                    <h1>Question {currentQuestion+1}</h1>\r\n                    <p>{questionData[currentQuestion].question}</p>\r\n                    <div className=\"options\">\r\n                        {\r\n                            questionData[currentQuestion].options.map((option,index)=>(\r\n                                <button onClick={()=> handleAnswerClick(option)} key={index}>{option}</button>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                    <div className=\"timer\">Time Left <span className=\"seconds\">{timer} s</span></div>\r\n                </div>\r\n                )\r\n            }\r\n\r\n                \r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App"],"mappings":";;AACA,OAAOA,YAAY,MAAM,kBAAkB;AAE3C,OAAO,WAAW;AAClB,SAASC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAOC,GAAG,GAAGA,CAAA,KAAK;EAAAC,EAAA;EACd,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACS,KAAK,EAACC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACpC,MAAM,CAACW,SAAS,EAACC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAChD,MAAM,CAACa,KAAK,EAACC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,GAAG,CAAC;EAGtC,MAAMe,iBAAiB,GAAIC,cAAc,IAAI;IACzC,IAAGA,cAAc,KAAKjB,YAAY,CAACkB,aAAa,EAAC;MAC7CP,QAAQ,CAAEQ,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;IAC1C;EACJ,CAAC;EAED,oBACIhB,OAAA,CAAAE,SAAA;IAAAe,QAAA,eACIjB,OAAA;MAAKkB,SAAS,EAAC,SAAS;MAAAD,QAAA,EAEpBR,SAAS,gBACLT,OAAA;QAAKkB,SAAS,EAAC,eAAe;QAAAD,QAAA,gBAC1BjB,OAAA;UAAAiB,QAAA,EAAI;QAAa;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtBtB,OAAA;UAAAiB,QAAA,EAAQ;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,gBAGVtB,OAAA;QAAKkB,SAAS,EAAC,kBAAkB;QAAAD,QAAA,gBAC7BjB,OAAA;UAAAiB,QAAA,GAAI,WAAS,EAACZ,eAAe,GAAC,CAAC;QAAA;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrCtB,OAAA;UAAAiB,QAAA,EAAIpB,YAAY,CAACQ,eAAe,CAAC,CAACkB;QAAQ;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/CtB,OAAA;UAAKkB,SAAS,EAAC,SAAS;UAAAD,QAAA,EAEhBpB,YAAY,CAACQ,eAAe,CAAC,CAACmB,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAACC,KAAK,kBACnD3B,OAAA;YAAQ4B,OAAO,EAAEA,CAAA,KAAKf,iBAAiB,CAACa,MAAM,CAAE;YAAAT,QAAA,EAAcS;UAAM,GAAdC,KAAK;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAkB,CAChF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEL,CAAC,eACNtB,OAAA;UAAKkB,SAAS,EAAC,OAAO;UAAAD,QAAA,GAAC,YAAU,eAAAjB,OAAA;YAAMkB,SAAS,EAAC,SAAS;YAAAD,QAAA,GAAEN,KAAK,EAAC,IAAE;UAAA;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChF;IACJ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKA;EAAC,gBACR,CAAC;AAEX,CAAC;AAAAlB,EAAA,CA5CMD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AA8CV,eAAeA,GAAG;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}