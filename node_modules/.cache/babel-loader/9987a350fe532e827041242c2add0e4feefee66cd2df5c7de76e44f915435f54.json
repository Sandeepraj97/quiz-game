{"ast":null,"code":"var _jsxFileName = \"E:\\\\New folder\\\\SANDY\\\\Ass\\\\Indroyd\\\\quizgame\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport QRCodeComponent from './QRCodeComponent';\nimport PlayerList from './components/PlayerList';\nimport Question from './Question';\nimport MobileScreen from './MobileScreen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [players, setPlayers] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const questions = [{\n    question: 'What is 2 + 2?',\n    options: ['A. 3', 'B. 4', 'C. 5', 'D. 6'],\n    correct: 'B'\n  }, {\n    question: 'Capital of France?',\n    options: ['A. Berlin', 'B. Madrid', 'C. Paris', 'D. Rome'],\n    correct: 'C'\n  }];\n  const currentQuestion = questions[currentQuestionIndex];\n  const handlePlayerJoin = playerName => {\n    setPlayers([...players, playerName]);\n  };\n  const handleAnswer = selectedAnswer => {\n    if (selectedAnswer === currentQuestion.correct) {\n      alert('Correct!');\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      alert('Wrong answer!');\n    }\n  };\n  if (currentQuestionIndex >= questions.length) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Game Over! Thanks for playing.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MainScreen, {\n      players: players\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MobileScreen, {\n      onJoin: handlePlayerJoin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Question, {\n      question: currentQuestion,\n      onAnswer: handleAnswer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"uNehGiBO4CEB0UxuzGWQFRYxEuE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","QRCodeComponent","PlayerList","Question","MobileScreen","jsxDEV","_jsxDEV","App","_s","players","setPlayers","currentQuestionIndex","setCurrentQuestionIndex","questions","question","options","correct","currentQuestion","handlePlayerJoin","playerName","handleAnswer","selectedAnswer","alert","length","children","fileName","_jsxFileName","lineNumber","columnNumber","MainScreen","onJoin","onAnswer","_c","$RefreshReg$"],"sources":["E:/New folder/SANDY/Ass/Indroyd/quizgame/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport QRCodeComponent from './QRCodeComponent';\nimport PlayerList from './components/PlayerList';\nimport Question from './Question';\nimport MobileScreen from './MobileScreen';\n\nconst App = () => {\n  const [players, setPlayers] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n\n  const questions = [\n    { question: 'What is 2 + 2?', options: ['A. 3', 'B. 4', 'C. 5', 'D. 6'], correct: 'B' },\n    { question: 'Capital of France?', options: ['A. Berlin', 'B. Madrid', 'C. Paris', 'D. Rome'], correct: 'C' }\n  ];\n\n  const currentQuestion = questions[currentQuestionIndex];\n\n  const handlePlayerJoin = (playerName) => {\n    setPlayers([...players, playerName]);\n  };\n\n  const handleAnswer = (selectedAnswer) => {\n    if (selectedAnswer === currentQuestion.correct) {\n      alert('Correct!');\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      alert('Wrong answer!');\n    }\n  };\n\n  if (currentQuestionIndex >= questions.length) {\n    return <h1>Game Over! Thanks for playing.</h1>;\n  }\n\n  return (\n    <div>\n      <MainScreen players={players} />\n      <MobileScreen onJoin={handlePlayerJoin} />\n      <Question question={currentQuestion} onAnswer={handleAnswer} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAEnE,MAAMa,SAAS,GAAG,CAChB;IAAEC,QAAQ,EAAE,gBAAgB;IAAEC,OAAO,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;IAAEC,OAAO,EAAE;EAAI,CAAC,EACvF;IAAEF,QAAQ,EAAE,oBAAoB;IAAEC,OAAO,EAAE,CAAC,WAAW,EAAE,WAAW,EAAE,UAAU,EAAE,SAAS,CAAC;IAAEC,OAAO,EAAE;EAAI,CAAC,CAC7G;EAED,MAAMC,eAAe,GAAGJ,SAAS,CAACF,oBAAoB,CAAC;EAEvD,MAAMO,gBAAgB,GAAIC,UAAU,IAAK;IACvCT,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAEU,UAAU,CAAC,CAAC;EACtC,CAAC;EAED,MAAMC,YAAY,GAAIC,cAAc,IAAK;IACvC,IAAIA,cAAc,KAAKJ,eAAe,CAACD,OAAO,EAAE;MAC9CM,KAAK,CAAC,UAAU,CAAC;MACjBV,uBAAuB,CAACD,oBAAoB,GAAG,CAAC,CAAC;IACnD,CAAC,MAAM;MACLW,KAAK,CAAC,eAAe,CAAC;IACxB;EACF,CAAC;EAED,IAAIX,oBAAoB,IAAIE,SAAS,CAACU,MAAM,EAAE;IAC5C,oBAAOjB,OAAA;MAAAkB,QAAA,EAAI;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAChD;EAEA,oBACEtB,OAAA;IAAAkB,QAAA,gBACElB,OAAA,CAACuB,UAAU;MAACpB,OAAO,EAAEA;IAAQ;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChCtB,OAAA,CAACF,YAAY;MAAC0B,MAAM,EAAEZ;IAAiB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1CtB,OAAA,CAACH,QAAQ;MAACW,QAAQ,EAAEG,eAAgB;MAACc,QAAQ,EAAEX;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEV,CAAC;AAACpB,EAAA,CAnCID,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAqCT,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}